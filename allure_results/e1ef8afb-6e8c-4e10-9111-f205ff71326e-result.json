{"name": "test_check_question_and_answer[3-\\u0414\\u043e\\u043f\\u0443\\u0441\\u0442\\u0438\\u043c, \\u0432\\u044b \\u043e\\u0444\\u043e\\u0440\\u043c\\u043b\\u044f\\u0435\\u0442\\u0435 \\u0437\\u0430\\u043a\\u0430\\u0437 \\u043d\\u0430 8 \\u043c\\u0430\\u044f. \\\\\\u041c\\u044b \\u043f\\u0440\\u0438\\u0432\\u043e\\u0437\\u0438\\u043c \\u0441\\u0430\\u043c\\u043e\\u043a\\u0430\\u0442 8 \\u043c\\u0430\\u044f \\u0432 \\u0442\\u0435\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043d\\u044f. \\\\\\u041e\\u0442\\u0441\\u0447\\u0451\\u0442 \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u0438 \\u0430\\u0440\\u0435\\u043d\\u0434\\u044b \\u043d\\u0430\\u0447\\u0438\\u043d\\u0430\\u0435\\u0442\\u0441\\u044f \\u0441 \\u043c\\u043e\\u043c\\u0435\\u043d\\u0442\\u0430, \\u043a\\u043e\\u0433\\u0434\\u0430 \\u0432\\u044b \\u043e\\u043f\\u043b\\u0430\\u0442\\u0438\\u0442\\u0435 \\u0437\\u0430\\u043a\\u0430\\u0437 \\u043a\\u0443\\u0440\\u044c\\u0435\\u0440\\u0443. \\\\\\u0415\\u0441\\u043b\\u0438 \\u043c\\u044b \\u043f\\u0440\\u0438\\u0432\\u0435\\u0437\\u043b\\u0438 \\u0441\\u0430\\u043c\\u043e\\u043a\\u0430\\u0442 8 \\u043c\\u0430\\u044f \\u0432 20:30, \\u0441\\u0443\\u0442\\u043e\\u0447\\u043d\\u0430\\u044f \\u0430\\u0440\\u0435\\u043d\\u0434\\u0430 \\\\\\u0437\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u0441\\u044f 9 \\u043c\\u0430\\u044f \\u0432 20:30.]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000100b32004 chromedriver + 4169732\n1   chromedriver                        0x0000000100b29ff8 chromedriver + 4136952\n2   chromedriver                        0x000000010077f500 chromedriver + 292096\n3   chromedriver                        0x00000001007c47a0 chromedriver + 575392\n4   chromedriver                        0x00000001007ff818 chromedriver + 817176\n5   chromedriver                        0x00000001007b85e8 chromedriver + 525800\n6   chromedriver                        0x00000001007b94b8 chromedriver + 529592\n7   chromedriver                        0x0000000100af8334 chromedriver + 3932980\n8   chromedriver                        0x0000000100afc970 chromedriver + 3950960\n9   chromedriver                        0x0000000100ae0774 chromedriver + 3835764\n10  chromedriver                        0x0000000100afd478 chromedriver + 3953784\n11  chromedriver                        0x0000000100ad2ab4 chromedriver + 3779252\n12  chromedriver                        0x0000000100b19914 chromedriver + 4069652\n13  chromedriver                        0x0000000100b19a90 chromedriver + 4070032\n14  chromedriver                        0x0000000100b29c70 chromedriver + 4136048\n15  libsystem_pthread.dylib             0x0000000192603fa8 _pthread_start + 148\n16  libsystem_pthread.dylib             0x00000001925feda0 thread_start + 8", "trace": "self = <tests.test_main_page.TestMainPage object at 0x103003850>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e5e4cedd69526f7e327b520cf0c53542\")>, number = 3\nresult = 'Допустим, вы оформляете заказ на 8 мая. \\\\Мы привозим самокат 8 мая в течение дня. \\\\Отсчёт времени аренды начинается...когда вы оплатите заказ курьеру. \\\\Если мы привезли самокат 8 мая в 20:30, суточная аренда \\\\закончится 9 мая в 20:30.'\n\n    @pytest.mark.parametrize('number, result',\n                             [(0, Answers.one),\n                              (1, Answers.two),\n                              (3, Answers.three),\n                              (4, Answers.four),\n                              (5, Answers.five),\n                              (6, Answers.six),\n                              (7, Answers.seven),\n                              (8, Answers.eight)\n                              ]\n                             )\n    def test_check_question_and_answer(self, driver, number, result):\n>       MainPage(driver).get_question(number)\n\ntests/test_main_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:10: in get_question\n    return self.find_my_element((method, locator)).text()\npages/base_page.py:11: in find_my_element\n    return Wait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e5e4cedd69526f7e327b520cf0c53542\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x1030d7920>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100b32004 chromedriver + 4169732\nE       1   chromedriver                        0x0000000100b29ff8 chromedriver + 4136952\nE       2   chromedriver                        0x000000010077f500 chromedriver + 292096\nE       3   chromedriver                        0x00000001007c47a0 chromedriver + 575392\nE       4   chromedriver                        0x00000001007ff818 chromedriver + 817176\nE       5   chromedriver                        0x00000001007b85e8 chromedriver + 525800\nE       6   chromedriver                        0x00000001007b94b8 chromedriver + 529592\nE       7   chromedriver                        0x0000000100af8334 chromedriver + 3932980\nE       8   chromedriver                        0x0000000100afc970 chromedriver + 3950960\nE       9   chromedriver                        0x0000000100ae0774 chromedriver + 3835764\nE       10  chromedriver                        0x0000000100afd478 chromedriver + 3953784\nE       11  chromedriver                        0x0000000100ad2ab4 chromedriver + 3779252\nE       12  chromedriver                        0x0000000100b19914 chromedriver + 4069652\nE       13  chromedriver                        0x0000000100b19a90 chromedriver + 4070032\nE       14  chromedriver                        0x0000000100b29c70 chromedriver + 4136048\nE       15  libsystem_pthread.dylib             0x0000000192603fa8 _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x00000001925feda0 thread_start + 8\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:101: TimeoutException"}, "parameters": [{"name": "number", "value": "3"}, {"name": "result", "value": "'Допустим, вы оформляете заказ на 8 мая. \\Мы привозим самокат 8 мая в течение дня. \\Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. \\Если мы привезли самокат 8 мая в 20:30, суточная аренда \\закончится 9 мая в 20:30.'"}], "start": 1699970586493, "stop": 1699970591650, "uuid": "7c9a8ede-c0e4-4cd3-a14a-4c18e5e56179", "historyId": "ffbf67c714251f9df433961b1b8d9e88", "testCaseId": "35650179983495a53f573bc23500b514", "fullName": "tests.test_main_page.TestMainPage#test_check_question_and_answer", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "MacBook-Air-Aleksej.local"}, {"name": "thread", "value": "20801-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}